<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>steve.ledcontrol</groupId>
    <artifactId>ledcontrol-parent</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0.0-SNAPSHOT</version>
    <name>LedControl parent</name>

    <properties>
        <!-- Java version -->
        <!-- Spring boot:  <java.version>1.8</java.version>-->
        <compiler.source.version>1.8</compiler.source.version>
        <compiler.target.version>1.8</compiler.target.version>

        <!-- default encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- 3rd party library versions -->
        <springboot.version>2.1.10.RELEASE</springboot.version>
        <springframework.version>5.2.20.RELEASE</springframework.version>

        <apache.camel.version>2.25.3</apache.camel.version>
        <rxtxcomm.version>2.2pre2</rxtxcomm.version>
        <apache.james.version>0.8.4</apache.james.version>
        <!-- undertow-websockets-jsr-version>2.0.16.Final</undertow-websockets-jsr-version -->
    </properties>

    <modules>
        <module>WebControl</module>
        <module>SerialComm</module>
    </modules>

    <repositories>
        <repository>
            <id>maven-central</id>
            <name>Maven central Repo</name>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
        <repository>
            <id>geotoolkit-repo-for-rxtxcomm</id>
            <name>Repo containing rxtxcomm</name>
            <url>http://maven.geotoolkit.org/</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>steve.ledcontrol</groupId>
                <artifactId>SerialComm</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>steve.ledcontrol</groupId>
                <artifactId>WebControl</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.rxtx</groupId>
                <artifactId>rxtxcomm</artifactId>
                <version>${rxtxcomm.version}</version>
                <!--<version>2.2-20081207</version>-->
                <!--<scope>system</scope>-->
                <!--<systemPath>${project.basedir}/src/main/resources/RXTXcomm.jar</systemPath>-->
            </dependency>

            <!-- Spring-boot starters -->
            <dependency>
                <groupId>steve.ledcontrol</groupId>
                <artifactId>SerialComm</artifactId>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <!-- Use Jetty since this is used by Apache Camel for websockets
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-undertow</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>io.undertow</groupId>
                <artifactId>undertow-websockets-jsr</artifactId>
                <version>${undertow-websockets-jsr-version}</version>
            </dependency>
            -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jetty</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j2</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <!--<dependency>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-starter-thymeleaf</artifactId>-->
                <!--<version>${springframework.version}</version>-->
            <!--</dependency>-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${springboot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-servlet-starter</artifactId>
                <version>${apache.camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-spring-boot-starter</artifactId>
                <version>${apache.camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-jackson-starter</artifactId>
                <version>${apache.camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-mail</artifactId>
                <version>${apache.camel.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.james</groupId>
                <artifactId>apache-mime4j-core</artifactId>
                <version>${apache.james.version}</version>
            </dependency>

            <!-- Spring -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${springframework.version}</version>
            </dependency>

            <!-- Camel Dependencies -->
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-core</artifactId>
                <version>${apache.camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-websocket</artifactId>
                <version>${apache.camel.version}</version>
            </dependency>

            <!-- logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.30</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.7.30</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
            </dependency>
            <!--<dependency>-->
                <!--<groupId>org.apache.logging.log4j</groupId>-->
                <!--<artifactId>log4j-jul</artifactId>-->
                <!--<version>2.11.1</version>-->
            <!--</dependency>-->

            <!-- Commons -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.6</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>1.9.4</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.8.0</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.15</version>
            </dependency>

            <!-- not provided any longer by default in Java 9+
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>2.3.0</version>
            </dependency>
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>1.1.1</version>
            </dependency>
            -->

            <!-- testing -->
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-test-spring</artifactId>
                <version>${apache.camel.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13.1</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <!-- Maven will append the version to the finalName (which is the name
            given to the generated war, and hence the context root) -->
        <finalName>${project.artifactId}</finalName>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${springboot.version}</version>
                <configuration>
                    <!-- this enables using mvn spring-boot:run from the parent (actual spring-boot app is in a module) -->
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <source>${compiler.source.version}</source>
                    <target>${compiler.target.version}</target>
                </configuration>
            </plugin>
        </plugins>

    </build>

</project>
